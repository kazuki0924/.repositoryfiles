version: "3.9"
name: project
services:
  postgres:
    container_name: postgresql
    image: postgres:14-bullseye
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres:/var/lib/postgresql/data
      - "${SIDECAR_ROOT}/ops/docker/postgres/init:/docker-entrypoint-initdb.d"
    env_file:
      - ".env"
    environment:
      DB_HOST: postgres
    healthcheck:
      test: pg_isready -h $${DB_HOST} -U $${DB_USER}
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - local_dev
  migrate:
    container_name: migrate
    build:
      context: .
      dockerfile: "./ops/docker/migrate/Dockerfile"
    env_file:
      - ".env"
    environment:
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - /bin/bash
      - -ceu
      - |
        make migrate
    networks:
      - local_dev
  seed:
    container_name: seed
    build:
      context: "."
      dockerfile: "./ops/docker/runner/Dockerfile"
    env_file:
      - ".env"
    environment:
      DB_HOST: postgres
    volumes:
      - ".:/app"
    working_dir: /app
    depends_on:
      migrate:
        condition: service_completed_successfully
    command:
      - /bin/bash
      - -ceu
      - |
        make seed
    networks:
      - local_dev
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "80:80"
    env_file:
      - ".env"
    environment:
      DB_HOST: postgres
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local_dev

volumes:
  postgres: null
  pgadmin: null
networks:
  local_dev:
    driver: bridge
    ipam:
      driver: default

